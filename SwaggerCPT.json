{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "EasyLib",
    "description": "Documentazione API di EasyLib"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http", "https"],
  "paths": {
    "/signUp": {
      "post": {
        "tags": ["Utente"],
        "summary": "Usata per registrare un nuovo utente.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Le informazioni sul nuovo utente da creare",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Utente"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED. Utente creato correttamente."
          },
          "400": {
            "description": "BAD REQUEST. Errore in seguito all'inserimento di un indirizzo email o una password non validi"
          },
          "500": {
            "description": "SERVER ERROR. Utente già presente in archivio."
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login dell'utente",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Credenziali dell'utente",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mail": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["mail", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Login effettuato con successo",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. Mail o password non corrette"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout dell'utente",
        "responses": {
          "200": {
            "description": "OK. Logout eseguito correttamente"
          }
        }
      }
    },
    "/Rented": {
      "patch": {
        "tags": ["Utente"],
        "summary": "Aggiunge un libro al carrello dell'utente",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Dettagli del libro da noleggiare",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mail": { "type": "string" },
                "titolo": { "type": "string" }
              },
              "required": ["mail", "titolo"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Libro aggiunto ai noleggi"
          },
          "400": {
            "description": "BAD REQUEST. Numero massimo di noleggi raggiunto"
          },
          "404": {
            "description": "NOT FOUND. Libro o utente non trovato"
          },
          "500": {
            "description": "SERVER ERROR. Errore del server."
          }
        }
      }
    },
    "/createApp": {
      "post": {
        "tags": ["Utente"],
        "summary": "Crea un appuntamento",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Dettagli dell'appuntamento",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appuntamento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Appuntamento creato"
          },
          "400": {
            "description": "BAD REQUEST. Data non valida"
          },
          "404": {
            "description": "NOT FOUND. Utente non trovato"
          },
          "500": {
            "description": "SERVER ERROR. Errore del server."
          }
        }
      }
    },
    "/newLibro": {
      "post": {
        "tags": ["Admin"],
        "summary": "Crea un nuovo libro",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Dettagli del nuovo libro",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "titolo": { "type": "string" },
                "Author_sur": { "type": "string" },
                "Author_name": { "type": "string" },
                "genre": { "type": "string" }
              },
              "required": ["titolo", "Author_sur", "Author_name", "genre"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED. Libro creato"
          },
          "409": {
            "description": "CONFLICT. Libro già presente nel Database"
          },
          "500": {
            "description": "SERVER ERROR. Errore del server."
          }
        }
      }
    },
    "/deleteUtente": {
      "delete": {
        "tags": ["Admin"],
        "summary": "Elimina un utente",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "description": "email dell'utente da eliminare",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Utente eliminato correttamente"
          },
          "404": {
            "description": "NOT FOUND. Utente non trovato"
          }
        }
      }
    },
    "/deleteLibro": {
      "delete": {
        "tags": ["Book"],
        "summary": "Elimina un libro",
        "parameters": [
          {
            "name": "titolo",
            "in": "query",
            "description": "Titolo del libro da eliminare",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Libro eliminato correttamente"
          },
          "404": {
            "description": "NOT FOUND. Libro non trovato"
          }
        }
      }
    },
    "/deleteAppuntamento": {
      "delete": {
        "tags": ["Utente"],
        "summary": "Cancella un appuntamento",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "description": "email dell'utente",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Appuntamento cancellato correttamente"
          },
          "404": {
            "description": "NOT FOUND. Appuntamento non trovato"
          }
        }
      }
    },
    "/getAppuntamento": {
      "get": {
        "tags": ["Utente"],
        "summary": "Cerca gli appuntamenti di un utente",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "description": "mail dell'utente che vuole visionare i suoi appuntamenti",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Lista degli appuntamenti",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Appuntamento"
              }
            }
          },
          "404": {
            "description": "NOT FOUND. Utente non trovato"
          }
        }
      }
    },
    "/arrayLibri": {
      "get": {
        "tags": ["Utente"],
        "summary": "Cerca i libri noleggiati da un utente",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "description": "mail dell'utente che vuole visionare i suoi libri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Lista dei libri",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          "404": {
            "description": "NOT FOUND. Utente non trovato"
          }
        }
      }
    },
    "/multa": {
      "get": {
        "tags": ["Utente"],
        "summary": "Cerca le multe di un utente",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "description": "mail dell'utente che vuole visionare le sue multe",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Lista delle multe",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Multa"
              }
            }
          },
          "404": {
            "description": "NOT FOUND. Utente non trovato"
          }
        }
      }
    }
  },
  "definitions": {
    "Utente": {
      "type": "object",
      "properties": {
        "nome": { "type": "string" },
        "cognome": { "type": "string" },
        "mail": { "type": "string" },
        "password": { "type": "string" }
      },
      "required": ["nome", "cognome", "mail", "password"]
    },
    "Appuntamento": {
      "type": "object",
      "properties": {
        "mail": { "type": "string" },
        "data": { "type": "string", "format": "date" },
        "orario": { "type": "string" },
        "descrizione": { "type": "string" }
      },
      "required": ["mail", "data", "orario"]
    },
    "Book": {
      "type": "object",
      "properties": {
        "titolo": { "type": "string" },
        "Author_sur": { "type": "string" },
        "Author_name": { "type": "string" },
        "genre": { "type": "string" }
      },
      "required": ["titolo", "Author_sur", "Author_name", "genre"]
    },
    "Multa": {
      "type": "object",
      "properties": {
        "mail": { "type": "string" },
        "data": { "type": "string", "format": "date" },
        "importo": { "type": "number" }
      },
      "required": ["mail", "data", "importo"]
    }
  }
}
